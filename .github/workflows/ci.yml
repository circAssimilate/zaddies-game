name: CI

on:
  pull_request:
  push:
    branches: [main]

jobs:
  # Detect what files changed
  changes:
    runs-on: ubuntu-latest
    outputs:
      code: ${{ steps.filter.outputs.code }}
      frontend: ${{ steps.filter.outputs.frontend }}
      backend: ${{ steps.filter.outputs.backend }}
    steps:
      - uses: actions/checkout@v3
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            code:
              - 'frontend/**'
              - 'backend/**'
              - 'shared/**'
              - 'package.json'
              - 'pnpm-lock.yaml'
              - 'pnpm-workspace.yaml'
              - '.github/workflows/**'
            frontend:
              - 'frontend/**'
              - 'shared/**'
              - 'package.json'
              - 'pnpm-lock.yaml'
              - 'pnpm-workspace.yaml'
            backend:
              - 'backend/**'
              - 'shared/**'
              - 'package.json'
              - 'pnpm-lock.yaml'
              - 'pnpm-workspace.yaml'

  # Lint job - only runs if code changed
  lint:
    needs: changes
    if: needs.changes.outputs.code == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Prettier Check
        run: pnpm run format:check

      - name: ESLint
        run: pnpm run lint

      - name: Type Check
        run: pnpm run type-check

  # Frontend test and build - only runs if frontend changed
  test-and-build-frontend:
    needs: changes
    if: needs.changes.outputs.frontend == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run Frontend Tests
        run: cd frontend && pnpm test

      - name: Build Frontend
        run: cd frontend && pnpm run build

  # Backend test and build - only runs if backend changed
  test-and-build-backend:
    needs: changes
    if: needs.changes.outputs.backend == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run Backend Tests
        run: cd backend && pnpm test

      - name: Build Backend
        run: cd backend && pnpm run build

  # ALWAYS runs - reports success if skipped or if all required jobs passed
  # This is the job that GitHub rulesets should require
  ci-status:
    runs-on: ubuntu-latest
    needs: [changes, lint, test-and-build-frontend, test-and-build-backend]
    if: always()
    steps:
      - name: Check CI status
        run: |
          echo "Changes detected:"
          echo "  - Code: ${{ needs.changes.outputs.code }}"
          echo "  - Frontend: ${{ needs.changes.outputs.frontend }}"
          echo "  - Backend: ${{ needs.changes.outputs.backend }}"
          echo ""
          echo "Job results:"
          echo "  - Lint: ${{ needs.lint.result }}"
          echo "  - Frontend: ${{ needs.test-and-build-frontend.result }}"
          echo "  - Backend: ${{ needs.test-and-build-backend.result }}"
          echo ""

          # If no code changes, report success
          if [ "${{ needs.changes.outputs.code }}" == "false" ]; then
            echo "✅ No code changes detected - skipping CI checks"
            exit 0
          fi

          # Check if any required job failed
          if [ "${{ needs.lint.result }}" == "failure" ] || \
             [ "${{ needs.test-and-build-frontend.result }}" == "failure" ] || \
             [ "${{ needs.test-and-build-backend.result }}" == "failure" ]; then
            echo "❌ One or more CI checks failed"
            exit 1
          fi

          echo "✅ All CI checks passed or were skipped appropriately"
          exit 0
