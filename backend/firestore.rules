rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    function isTableHost(tableId) {
      return isAuthenticated() &&
             get(/databases/$(database)/documents/tables/$(tableId)).data.hostId == request.auth.uid;
    }

    function isPlayerAtTable(tableId) {
      let table = get(/databases/$(database)/documents/tables/$(tableId));
      let playerIds = table.data.players.map(p => p.id);
      return isAuthenticated() && request.auth.uid in playerIds;
    }

    // Players collection
    match /players/{playerId} {
      // Players can read their own data or any other player's data (for leaderboard, etc.)
      allow read: if isAuthenticated();
      // Players can only create/update their own profile
      allow create: if isOwner(playerId)
                    && request.resource.data.id == playerId
                    && request.resource.data.balance == 0;
      allow update: if isOwner(playerId)
                    && request.resource.data.id == resource.data.id;
      allow delete: if false; // Never delete players
    }

    // Ledger entries (transparent for friend accountability)
    match /ledger/{ledgerId} {
      // All authenticated users can read ledger (transparency for friend games)
      allow read: if isAuthenticated();
      // Only backend can write (via Cloud Functions)
      allow write: if false;
    }

    // Tables
    match /tables/{tableId} {
      // Anyone authenticated can read any table (join by table ID)
      allow read: if isAuthenticated();

      // Host can create table
      allow create: if isAuthenticated()
                    && request.resource.data.hostId == request.auth.uid
                    && request.resource.data.id == tableId;

      // Host can update their table, or players can update to join/leave
      allow update: if isTableHost(tableId) || isAuthenticated();

      // Host can delete their table
      allow delete: if isTableHost(tableId);
    }

    // Game state is managed entirely by Cloud Functions
    // Frontend only reads, never writes directly
  }
}
